<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>